<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>